<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>